<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>